<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>